<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>